<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>